<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>